<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>